<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>